<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>